<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>